<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>